<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>